<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>